<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>